<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>